<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>